<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>